<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>